<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>